<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>